<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>